<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>